<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>